<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>